<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>